<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>